<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>